<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>